<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>